<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>